<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>